<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>